<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>